<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>